<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>